<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>